<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>